<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>